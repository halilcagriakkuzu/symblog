version: '3'
services:

  #PHP Service
  blog_php:
    build:
      context: .
      dockerfile: Dockerfile
    image: blog_php80
    container_name: blog_php
    tty: true
    #Productionda bunun açılması gerekir.
    #restart: unless-stopped
    environment:
      SERVICE_NAME: blog_php
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ../:/var/www:delegated
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini:delegated
      - ./php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini:delegated
    networks:
      - blog_network

  #Nginx Service
  blog_webserver:
    image: nginx:alpine
    container_name: blog_webserver
    tty: true
    #Productionda bunun açılması gerekir.
    #restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../:/var/www:delegated
      - ./nginx/conf.d/:/etc/nginx/conf.d/:delegated
      - ./nginx/certs:/etc/nginx/certs:delegated
    networks:
      - blog_network

   #MySQL Service
  blog_db:
    image: mysql:5.7
    container_name: blog_db
    tty: true
    #Productionda bunun açılması gerekir.
    #restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: symblog
      MYSQL_ROOT_PASSWORD: test
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - blog_dbdata:/var/lib/mysql/:delegated
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - blog_network

#Docker Networks
networks:
  blog_network:
    driver: bridge

#Volumes
volumes:
  blog_dbdata:
    driver: local
